x get rid of the run function
x get rid of the bind function
x get rid of the waiters
  x First strategy is to send all tasks to the control loop using a channel
  x As a prerequisite we need to make Control an enum
  x It seems to work but we have to think about it
    x Investigate on how to get rid of it all by awaiting listener and sender
      into listen_tcp
x instanciate clients in control loop
  x Currently, any interactions done with the clients are in the control loop.
    It may be a hint on the fact that the broker IS the control loop
  x It works. Also, the way parameters are passed to the treat functions invites
    the Control loop to manipulate a struct on it's own.
x Control should be renamed to Command
  x Then Control::Packet to Command::Control
  x And the control loop is now the command loop
x find better than the shutdown flag (control ?)
  x I don't know if it's better but it's funnier. I provide a fire-and-forget
    bool that can be shared across tasks. Once fired, the server is in safe
    shutdown state
- control packet only interface even in the main code
- get rid of broker
- Eventually, check for documentation in server and mod
- By setting a decouplable shutdown, maybe the command loop should return the
  command receiver to allow new loops to be created afterwards

